C -> D C | idK | I C | R C | Z C | ε

K -> A' C | F' C

A' -> = O;

F' -> (X);

D -> T id;

A -> id A'

I -> if(Y){C} I'
I' -> else {C} | ε

Y -> Y’ B
B -> W Y’ | L Y’
Y’ -> id | num | ”car”

R -> for(A id W O; A) {C} | while(id W E) {C}
E -> num | idE'
E' -> F'| ε

Z -> fn id P {C’}
P -> ( T id P' )| ε
P' -> ,P | ε


C’ -> C C''
C'' -> return Y'; | ε

X -> X' | ε
X' -> X'' J
J - > , X' | ε
X'' -> E | "string" | null 

O -> (O) O' | E O'
O' -> M O | ε

T -> int | float | string | boolean | void
M -> + | - | * | /
L -> ^ | and | && | or | || | v
W -> == | > | >= | <= | < | != 

